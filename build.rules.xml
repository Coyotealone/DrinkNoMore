<?xml version="1.0" encoding="UTF-8"?>
<project name="harmony-rules" >

    <property
        name="findbug.analyze.package"
        value="" />

    <property
        name="checkstyle.includes"
        value="" />

    <property
        name="checkstyle.excludes"
        value="" />

    <property
        name="android-jar"
        value="${sdk.dir}/platforms/android-14/android.jar" />

    <property
        name="tmp.rel-dir"
        value="tmp" />

    <path id="findbugs.dir.jars" >

        <fileset dir="${env.FINDBUGS_HOME}/lib" >

            <include name="*.jar" />
        </fileset>
    </path>

    <path id="classpath" >

        <fileset dir="${jar.libs.dir}" >

            <include name="*.jar" />
        </fileset>

        <pathelement path="${android-jar}" />

        <pathelement path="${jar.libs.dir}/sherlock/library/bin/classes.jar" />

        <pathelement path="${jar.libs.dir}/sherlock/library/libs/android-support-v4.jar" />
    </path>

    <!-- basic -->

    <target name="init" >

        <mkdir dir="${out.dir}" />

        <mkdir dir="${tmp.rel-dir}" />
    </target>

    <target
        name="run-findbugs"
        depends="init" >

        <taskdef
            name="findbugs"
            classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
            classpathref="findbugs.dir.jars"
            description="classes+findbugs=magic" />

        <findbugs
            excludefilter="./findbugs_excludes.xml"
            home="${env.FINDBUGS_HOME}"
            onlyAnalyze="${findbug.analyze.package}"
            output="xml"
            outputFile="${tmp.rel-dir}/findbugs.xml" >

            <sourcePath path="${source.dir}" />

            <class location="${out.dir}" />

            <auxClasspath refid="classpath" /> <!-- so we dont get hundrets of "The following classes needed for analysis were missing" warnings. -->
        </findbugs>

        <xslt
            style="${env.FINDBUGS_HOME}/src/xsl/fancy.xsl"
            in="${tmp.rel-dir}/findbugs.xml"
            out="${tmp.rel-dir}/findbugs.html" />
    </target>

    <target
        name="run-checkstyle"
        depends="init"
        description="Report of code convention violations." >

        <!-- Fail this target if CheckStyle is not installed. -->

        <available
            file="${env.CHECKSTYLE_HOME}/checkstyle-5.6-all.jar"
            property="checkstyle.available" />

        <fail
            message="Error: CHECKSTYLE_HOME not set or checkstyle-5.6-all.jar not found."
            unless="checkstyle.available" />

        <!-- Run this target if CheckStyle is installed. -->

        <taskdef
            classpath="${env.CHECKSTYLE_HOME}/checkstyle-5.6-all.jar"
            resource="checkstyletask.properties" />

        <!-- run analysis -->

        <checkstyle
            config="checkstyle_rules.xml"
            failOnViolation="false"
            failureProperty="checkstyle.failure" >

            <formatter
                tofile="${tmp.rel-dir}/checkstyle-result.xml"
                type="xml" />

            <fileset
                dir="${source.dir}"
                excludes="${checkstyle.excludes}"
                includes="${checkstyle.includes}" />
        </checkstyle>

        <!-- Report -->

        <xslt
            style="${env.CHECKSTYLE_HOME}/contrib/checkstyle-noframes.xsl"
            in="${tmp.rel-dir}/checkstyle-result.xml"
            out="${tmp.rel-dir}/checkstyle-result.html" />
    </target>

    <target
        name="run-pmd"
        depends="init"
        description="Run pmd" >

        <!-- Fail this target if Pmd is not installed. -->

        <available
            file="${env.PMD_HOME}/lib/pmd-5.0.2.jar"
            property="pmd.available" />

        <fail
            message="Error: PMD_HOME not set or pmd-5.0.2.jar not found."
            unless="pmd.available" />

        <path id="pmd.classpath" >

            <fileset dir="${env.PMD_HOME}/lib/" >

                <include name="**/*.jar" />
            </fileset>
        </path>

        <!-- Run this target if Pmd is installed. -->

        <taskdef
            name="pmd"
            classname="net.sourceforge.pmd.ant.PMDTask"
            classpath="${env.PMD_HOME}/lib/pmd-5.0.2.jar"
            classpathref="pmd.classpath" />

        <pmd shortFilenames="true" >

            <ruleset>
./pmd_rules.xml
            </ruleset>

            <formatter
                toFile="${tmp.rel-dir}/pmd.xml"
                type="xml" />

            <fileset dir="${source.dir}" >

                <include name="**/*.java" />

                <exclude name="**/*Test*" />
            </fileset>
        </pmd>

        <taskdef
            name="cpd"
            classname="net.sourceforge.pmd.cpd.CPDTask"
            classpath="${env.PMD_HOME}/lib/pmd-5.0.2.jar"
            classpathref="pmd.classpath" />

        <cpd
            format="xml"
            language="java"
            minimumTokenCount="100"
            outputFile="${tmp.rel-dir}/cpd.xml" >

            <fileset dir="${source.dir}" >

                <include name="**/*.java" />

                <exclude name="**/*Test*" />
            </fileset>
        </cpd>

        <!-- Report -->

        <xslt
            style="${env.PMD_HOME}/etc/xslt/pmd-report.xslt"
            in="${tmp.rel-dir}/pmd.xml"
            out="${tmp.rel-dir}/pmd.html" />

        <xslt
            style="${env.PMD_HOME}/etc/xslt/cpdhtml.xslt"
            in="${tmp.rel-dir}/cpd.xml"
            out="${tmp.rel-dir}/cpd.html" />
    </target>

    <target
        name="reports"
        depends="run-checkstyle,run-findbugs,run-pmd" />

    <target name="AfficherVersionAnt" >

        <echo message="Version d&apos;Ant utilisÃ©e: ${ant.version}" />
    </target>

</project>